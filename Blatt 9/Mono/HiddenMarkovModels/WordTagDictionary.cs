//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
namespace HiddenMarkovModels
{
    public class WordTagDictionary : TagDictionary
    {
        public string GetTagForWord(string word, TagDictionary markovChains)
        {
            ProbabilityDictionary <string> possibleTags = null;
            try
            {
                possibleTags = dict[word];
            } catch {  }
            
            if(possibleTags != null)
            {
                if(possibleTags.Count == 1)
                {
                    //Only one tag is possbile. Return that one.
                    return possibleTags.GetRandomItem();
                }
                else
                {
                    //Multiple tags could be possible.
                    //Use markov chains and tag probability to nominate a tag.
                    
                }
            }
            else
            {
                //Any tag could be possible. Rely on markov chains only.
                
            }
            
            return "{{ goddamit steve }}";
        }
    }
}

